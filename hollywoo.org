# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2025-06-26 00:41:34 krylon>
#
#+TAGS: internals(i) ui(u) bug(b) feature(f)
#+TAGS: database(d) design(e), meditation(m)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

* Hollywoo [1/2]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:
  A naive video library
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 255 :emphasize t
   #+CAPTION: Clock summary at [2025-06-26 Do 00:41]
   | Headline               | Time    |         |      |
   |------------------------+---------+---------+------|
   | *Total time*           | *15:45* |         |      |
   |------------------------+---------+---------+------|
   | *Hollywoo [1/2]*       | *15:45* |         |      |
   | \_  /Components [1/2]/ |         | /15:45/ |      |
   | \_    Model [0/0]      |         |         | 0:17 |
   | \_    Database [0/1]   |         |         | 5:00 |
   | \_    Scanner [1/1]    |         |         | 3:21 |
   | \_    GUI [0/0]        |         |         | 7:07 |
   #+END:
** Journal
** Features [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Components [1/2]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Model [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-06-21 Sa 17:45]--[2025-06-21 Sa 18:02] =>  0:17
    :END:
*** Database [0/1]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-06-23 Mo 20:58]--[2025-06-23 Mo 21:03] =>  0:05
    CLOCK: [2025-06-23 Mo 19:20]--[2025-06-23 Mo 19:50] =>  0:30
    CLOCK: [2025-06-23 Mo 18:20]--[2025-06-23 Mo 19:18] =>  0:58
    CLOCK: [2025-06-23 Mo 17:42]--[2025-06-23 Mo 18:08] =>  0:26
    CLOCK: [2025-06-22 So 16:48]--[2025-06-22 So 17:07] =>  0:19
    CLOCK: [2025-06-21 Sa 18:51]--[2025-06-21 Sa 21:00] =>  2:09
    CLOCK: [2025-06-21 Sa 18:02]--[2025-06-21 Sa 18:35] =>  0:33
    :END:
**** MEDITATE Relative paths?
     I had this problem before - if I store the full path of every file, that
     amounts to a lot of wasted space. I *could* attempt to store the path
     only relative to the folder a Video was found in.
     However, that causes a lot of headaches I am not sure I am ready to
     handle. And I am not sure, either, if it is worth the effort.
     Still, might be a fun way to spend an otherwise boring weekend.
*** Scanner [1/1]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-06-24 Di 19:50]--[2025-06-24 Di 20:14] =>  0:24
    CLOCK: [2025-06-24 Di 17:45]--[2025-06-24 Di 19:45] =>  2:00
    CLOCK: [2025-06-24 Di 14:40]--[2025-06-24 Di 15:20] =>  0:40
    CLOCK: [2025-06-23 Mo 21:03]--[2025-06-23 Mo 21:20] =>  0:17
    :END:
**** DONE Extract title from metadata?
     CLOSED: [2025-06-24 Di 19:45]
     I *could* attempt to process a Video's metadata, to see if it has a title
     embedded. /If/ successful, I could use that.
     I could, in fact, attempt to process other metadata, too, to get links to
     People.
     python3-av provides bindings to ffmpeg, on SuSE it's called python313-av.
     pymediainfo could also be worth looking into.
     *Update* Yes, pymediainfo appears to be what I was looking
     for. Processing the data is going to be tedious (/very/ tedious), but it
     should be doable.
     That is going to complicate my model, though.
*** GUI [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-06-25 Mi 19:47]--[2025-06-26 Do 00:41] =>  4:54
    CLOCK: [2025-06-25 Mi 17:26]--[2025-06-25 Mi 19:39] =>  2:13
    :END:
