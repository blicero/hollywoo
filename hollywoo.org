# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2025-07-03 15:46:44 krylon>
#
#+TAGS: internals(i) ui(u) bug(b) feature(f)
#+TAGS: database(d) design(e), meditation(m)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

* Hollywoo [4/5]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:
  A naive video library
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 255 :emphasize t
   #+CAPTION: Clock summary at [2025-07-03 Do 15:46]
   | Headline                                 | Time       |            |         |      |
   |------------------------------------------+------------+------------+---------+------|
   | *Total time*                             | *1d 12:33* |            |         |      |
   |------------------------------------------+------------+------------+---------+------|
   | *Hollywoo [4/5]*                         | *1d 12:33* |            |         |      |
   | \_  /Components [4/5]/                   |            | /1d 12:33/ |         |      |
   | \_    Model [0/0]                        |            |            |    0:17 |      |
   | \_    Config [0/0]                       |            |            |    0:13 |      |
   | \_    Database [1/2]                     |            |            |    5:28 |      |
   | \_    Scanner [1/1]                      |            |            |    3:21 |      |
   | \_    GUI [2/4]                          |            |            | 1d 3:14 |      |
   | \_      Manage People                    |            |            |         | 2:56 |
   | \_      Let us play!                     |            |            |         | 0:36 |
   | \_      Persist and restore window state |            |            |         | 1:03 |
   | \_      Out of context                   |            |            |         | 5:04 |
   #+END:
** Journal
** Features [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Components [4/5]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Model [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-06-21 Sa 17:45]--[2025-06-21 Sa 18:02] =>  0:17
    :END:
*** Config [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-06-30 Mo 18:33]--[2025-06-30 Mo 18:46] =>  0:13
    :END:
*** Database [1/2]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-07-02 Mi 13:45]--[2025-07-02 Mi 14:11] =>  0:26
    CLOCK: [2025-07-01 Di 13:24]--[2025-07-01 Di 13:26] =>  0:02
    CLOCK: [2025-06-23 Mo 20:58]--[2025-06-23 Mo 21:03] =>  0:05
    CLOCK: [2025-06-23 Mo 19:20]--[2025-06-23 Mo 19:50] =>  0:30
    CLOCK: [2025-06-23 Mo 18:20]--[2025-06-23 Mo 19:18] =>  0:58
    CLOCK: [2025-06-23 Mo 17:42]--[2025-06-23 Mo 18:08] =>  0:26
    CLOCK: [2025-06-22 So 16:48]--[2025-06-22 So 17:07] =>  0:19
    CLOCK: [2025-06-21 Sa 18:51]--[2025-06-21 Sa 21:00] =>  2:09
    CLOCK: [2025-06-21 Sa 18:02]--[2025-06-21 Sa 18:35] =>  0:33
    :END:
**** TODO Testing
     The database is the one component where I can - and /should/ -
     meaningfully perform automated tests.
**** CANCELLED [#G] Relative paths?
     CLOSED: [2025-07-01 Di 14:36]
     I had this problem before - if I store the full path of every file, that
     amounts to a lot of wasted space. I *could* attempt to store the path
     only relative to the folder a Video was found in.
     However, that causes a lot of headaches I am not sure I am ready to
     handle. And I am not sure, either, if it is worth the effort.
     Still, might be a fun way to spend an otherwise boring weekend.
     ... After thinking about for some time, I have reached the conclusion
     that it is not worth the hassle.
*** Scanner [1/1]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-06-24 Di 19:50]--[2025-06-24 Di 20:14] =>  0:24
    CLOCK: [2025-06-24 Di 17:45]--[2025-06-24 Di 19:45] =>  2:00
    CLOCK: [2025-06-24 Di 14:40]--[2025-06-24 Di 15:20] =>  0:40
    CLOCK: [2025-06-23 Mo 21:03]--[2025-06-23 Mo 21:20] =>  0:17
    :END:
**** DONE Extract title from metadata?
     CLOSED: [2025-06-24 Di 19:45]
     I *could* attempt to process a Video's metadata, to see if it has a title
     embedded. /If/ successful, I could use that.
     I could, in fact, attempt to process other metadata, too, to get links to
     People.
     python3-av provides bindings to ffmpeg, on SuSE it's called python313-av.
     pymediainfo could also be worth looking into.
     *Update* Yes, pymediainfo appears to be what I was looking
     for. Processing the data is going to be tedious (/very/ tedious), but it
     should be doable.
     That is going to complicate my model, though.
*** GUI [2/4]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-07-02 Mi 12:56]--[2025-07-02 Mi 13:34] =>  0:38
    CLOCK: [2025-07-02 Mi 09:45]--[2025-07-02 Mi 10:16] =>  0:31
    CLOCK: [2025-07-01 Di 13:27]--[2025-07-01 Di 13:42] =>  0:15
    CLOCK: [2025-07-01 Di 13:17]--[2025-07-01 Di 13:24] =>  0:07
    CLOCK: [2025-07-01 Di 12:44]--[2025-07-01 Di 12:51] =>  0:07
    CLOCK: [2025-06-30 Mo 20:05]--[2025-06-30 Mo 21:42] =>  1:37
    CLOCK: [2025-06-30 Mo 16:34]--[2025-06-30 Mo 18:32] =>  1:58
    CLOCK: [2025-06-27 Fr 20:40]--[2025-06-27 Fr 21:10] =>  0:30
    CLOCK: [2025-06-27 Fr 17:59]--[2025-06-27 Fr 18:58] =>  0:59
    CLOCK: [2025-06-26 Do 15:41]--[2025-06-26 Do 19:27] =>  3:46
    CLOCK: [2025-06-25 Mi 19:47]--[2025-06-26 Do 00:41] =>  4:54
    CLOCK: [2025-06-25 Mi 17:26]--[2025-06-25 Mi 19:39] =>  2:13
    :END:
**** TODO Manage People
     :LOGBOOK:
     CLOCK: [2025-07-03 Do 14:59]--[2025-07-03 Do 15:46] =>  0:47
     CLOCK: [2025-07-03 Do 14:50]--[2025-07-03 Do 14:50] =>  0:00
     CLOCK: [2025-07-02 Mi 14:11]--[2025-07-02 Mi 16:09] =>  1:58
     CLOCK: [2025-07-02 Mi 13:34]--[2025-07-02 Mi 13:45] =>  0:11
     :END:
**** DONE [#D] Let us play!
     CLOSED: [2025-07-01 Di 14:27]
     :LOGBOOK:
     CLOCK: [2025-07-01 Di 13:50]--[2025-07-01 Di 14:26] =>  0:36
     :END:
     That would include multiple selection, maybe even playlist management.
**** TODO Persist and restore window state
     :LOGBOOK:
     CLOCK: [2025-07-03 Do 14:51]--[2025-07-03 Do 14:57] =>  0:06
     CLOCK: [2025-07-01 Di 15:13]--[2025-07-01 Di 16:10] =>  0:57
     :END:
**** DONE Out of context
     CLOSED: [2025-06-30 Mo 18:33]
     :LOGBOOK:
     CLOCK: [2025-06-30 Mo 16:17]--[2025-06-30 Mo 16:33] =>  0:16
     CLOCK: [2025-06-30 Mo 15:50]--[2025-06-30 Mo 16:08] =>  0:18
     CLOCK: [2025-06-29 So 18:16]--[2025-06-29 So 18:48] =>  0:32
     CLOCK: [2025-06-28 Sa 14:55]--[2025-06-28 Sa 18:53] =>  3:58
     :END:
     
